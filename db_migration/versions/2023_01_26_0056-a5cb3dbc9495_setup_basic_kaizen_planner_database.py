"""Setup Basic Kaizen Planner Database

Revision ID: a5cb3dbc9495
Revises: 
Create Date: 2023-01-26 00:56:08.546385

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'a5cb3dbc9495'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('kaizen_analysis_question',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('question', sa.String(length=256), nullable=False),
                    sa.Column('analysis_type',
                              sa.Enum('HOW_HOW', 'BRAINSTORMING', 'VALUE_STREAM_MAPPING', 'FIVE_WHY_ANALYSIS',
                                      'FOUR_M_METHOD', 'CAUSE_AFFECT_ANALYSIS', name='kaizenanalysistype'),
                              nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    schema='info'
                    )
    op.create_index('idx_kaizen_analysis_question_question', 'kaizen_analysis_question', ['question'], unique=False,
                    schema='info')

    op.create_table('kaizen_question',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('question', sa.String(length=256), nullable=False),
                    sa.Column('reference_table',
                              sa.Enum('KAIZEN', 'KAIZEN_PERFORMANCE_PARAMETER', 'KAIZEN_DEVELOPMENT_SOLUTION',
                                      'KAIZEN_IMPLEMENTATION_PLAN', 'KAIZEN_KEY_OUTCOME', 'KAIZEN_ANALYSIS', name='kaizenquestionsegment'),
                              nullable=False),
                    sa.Column('reference_table_column', sa.String(length=32), nullable=False),
                    sa.Column('question_type', sa.Enum('PROACTIVE', 'REACTIVE', 'INNOVATIVE', name='kaizentype'),
                              nullable=False),
                    sa.Column('question_stage', sa.String(length=32), nullable=False),
                    sa.Column('sort_order', sa.Integer(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    schema='info'
                    )
    op.create_index('idx_kaizen_question_question', 'kaizen_question', ['question'], unique=False, schema='info')

    op.create_table('kaizen',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('user_id', sa.String(length=128), nullable=False),
                    sa.Column('type', sa.Enum('PROACTIVE', 'REACTIVE', 'INNOVATIVE', name='kaizentype'), nullable=True),
                    sa.Column('title', sa.String(length=1024), nullable=True),
                    sa.Column('problem_statement', sa.String(length=2048), nullable=True),
                    sa.Column('status', sa.Enum('IN_PROGRESS', 'COMPLETED', name='kaizenstatus'), nullable=True),
                    sa.Column('source', sa.Enum('CLIENT_REQUIREMENT', 'SELF_IMPLEMENTED', name='kaizensource'),
                              nullable=True),
                    sa.Column('owner', sa.String(length=256), nullable=True),
                    sa.Column('team_members', sa.ARRAY(sa.String()), nullable=True),
                    sa.Column('department_name', sa.String(length=256), nullable=True),
                    sa.Column('project_name', sa.String(length=256), nullable=True),
                    sa.Column('kaizen_start_date', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('kaizen_end_date', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_user_id', 'kaizen', ['user_id'], unique=False, schema='response')

    op.create_table('kaizen_analysis',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('kaizen_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('analysis_question_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('response', sa.String(length=512), nullable=False),
                    sa.ForeignKeyConstraint(['analysis_question_id'], ['info.kaizen_analysis_question.id'], ),
                    sa.ForeignKeyConstraint(['kaizen_id'], ['response.kaizen.id'], ),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_analysis_kaizen_id', 'kaizen_analysis', ['kaizen_id'], unique=False, schema='response')

    op.create_table('kaizen_development_solution',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('kaizen_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('aspect', sa.String(length=256), nullable=True),
                    sa.Column('root_cause', sa.String(length=512), nullable=True),
                    sa.Column('idea', sa.String(length=256), nullable=True),
                    sa.Column('improvement_action', sa.String(length=256), nullable=True),
                    sa.Column('improvement_action_owner', sa.String(length=256), nullable=True),
                    sa.Column('improvement_outcome', sa.String(length=512), nullable=True),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.ForeignKeyConstraint(['kaizen_id'], ['response.kaizen.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_development_solution_kaizen_id', 'kaizen_development_solution', ['kaizen_id'],
                    unique=False, schema='response')

    op.create_table('kaizen_key_outcome',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('kaizen_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('outcome', sa.String(length=256), nullable=False),
                    sa.Column('outcome_type',
                              sa.Enum('SUCCESS_ITEM', 'FAILURE_ITEM', 'FUTURE_IMPROVEMENT', 'PERSONAL_BENEFIT',
                                      'TEAM_BENEFIT', 'ORGANIZATION_BENEFIT', 'CLIENT_BENEFIT', 'TAKE_AWAYS',
                                      name='kaizenoutcometype'), nullable=False),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.ForeignKeyConstraint(['kaizen_id'], ['response.kaizen.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('kaizen_key_outcome_kaizen_id', 'kaizen_key_outcome', ['kaizen_id'], unique=False,
                    schema='response')

    op.create_table('kaizen_perf_param',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('kaizen_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('parameter_type', sa.Enum('PRIMARY', 'SECONDARY', name='kaizenparametertype'),
                              nullable=True),
                    sa.Column('parameter_description', sa.String(length=256), nullable=True),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.ForeignKeyConstraint(['kaizen_id'], ['response.kaizen.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_perf_param_kaizen_id', 'kaizen_perf_param', ['kaizen_id'], unique=False,
                    schema='response')

    op.create_table('kaizen_implementation_plan',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('development_solution_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('target_date', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('actual_date', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('improvement_action', sa.String(length=512), nullable=True),
                    sa.Column('improvement_solution', sa.String(length=512), nullable=True),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.ForeignKeyConstraint(['development_solution_id'], ['response.kaizen_development_solution.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_implementation_plan_development_solution_id', 'kaizen_implementation_plan',
                    ['development_solution_id'], unique=False, schema='response')

    op.create_table('kaizen_perf_param_metric',
                    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
                    sa.Column('kaizen_perf_param_id', postgresql.UUID(as_uuid=True), nullable=True),
                    sa.Column('metric', sa.Enum('TIME', 'COST', 'QUALITY', name='kaizenperformancemetric'),
                              nullable=False),
                    sa.Column('performance_before', sa.String(length=256), nullable=False),
                    sa.Column('performance_target', sa.String(length=256), nullable=False),
                    sa.Column('performance_after', sa.String(length=256), nullable=False),
                    sa.Column('created_on', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('created_by', sa.String(length=128), nullable=True),
                    sa.Column('modified_on', sa.DateTime(timezone=True), nullable=False),
                    sa.Column('modified_by', sa.String(length=128), nullable=True),
                    sa.ForeignKeyConstraint(['kaizen_perf_param_id'], ['response.kaizen_perf_param.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    schema='response'
                    )
    op.create_index('idx_kaizen_perf_param_metric_kaizen_perf_param_id', 'kaizen_perf_param_metric',
                    ['kaizen_perf_param_id'], unique=False, schema='response')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_kaizen_perf_param_metric_kaizen_perf_param_id', table_name='kaizen_perf_param_metric',
                  schema='response')
    op.drop_table('kaizen_perf_param_metric', schema='response')
    op.drop_index('idx_kaizen_implementation_plan_development_solution_id', table_name='kaizen_implementation_plan',
                  schema='response')
    op.drop_table('kaizen_implementation_plan', schema='response')
    op.drop_index('idx_kaizen_perf_param_kaizen_id', table_name='kaizen_perf_param', schema='response')
    op.drop_table('kaizen_perf_param', schema='response')
    op.drop_index('kaizen_key_outcome_kaizen_id', table_name='kaizen_key_outcome', schema='response')
    op.drop_table('kaizen_key_outcome', schema='response')
    op.drop_index('idx_kaizen_development_solution_kaizen_id', table_name='kaizen_development_solution',
                  schema='response')
    op.drop_table('kaizen_development_solution', schema='response')
    op.drop_index('idx_kaizen_analysis_kaizen_id', table_name='kaizen_analysis', schema='response')
    op.drop_table('kaizen_analysis', schema='response')
    op.drop_index('idx_kaizen_user_id', table_name='kaizen', schema='response')
    op.drop_table('kaizen', schema='response')
    op.drop_index('idx_kaizen_question_question', table_name='kaizen_question', schema='info')
    op.drop_table('kaizen_question', schema='info')
    op.drop_index('idx_kaizen_analysis_question_question', table_name='kaizen_analysis_question', schema='info')
    op.drop_table('kaizen_analysis_question', schema='info')
    op.execute(' DROP TYPE IF EXISTS kaizenperformancemetric')
    op.execute(' DROP TYPE IF EXISTS kaizenparametertype')
    op.execute(' DROP TYPE IF EXISTS kaizenoutcometype')
    op.execute(' DROP TYPE IF EXISTS kaizensource')
    op.execute(' DROP TYPE IF EXISTS kaizenstatus')
    op.execute(' DROP TYPE IF EXISTS kaizentype')
    op.execute(' DROP TYPE IF EXISTS kaizenquestionsegment')
    op.execute(' DROP TYPE IF EXISTS kaizenanalysistype')
    # ### end Alembic commands ###
